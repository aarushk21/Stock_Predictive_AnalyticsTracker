# Docker Compose configuration for Stock Analytics

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock-analytics-backend
    ports:
      - "8000:8000"
    environment:
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-demo_key}
      - NEWS_API_KEY=${NEWS_API_KEY:-demo_key}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-localhost}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-stock_analytics}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    volumes:
      - ./backend:/app
    networks:
      - stock-analytics-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock-analytics-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - stock-analytics-network
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Optional: PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: stock-analytics-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-stock_analytics}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - stock-analytics-network
    profiles:
      - database

networks:
  stock-analytics-network:
    driver: bridge

volumes:
  postgres_data: 